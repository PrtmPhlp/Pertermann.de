# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Yarn Build

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: self-hosted
    env:
      HOME: /root/

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install
      - name: Run yarn Test
        run: yarn test
      - uses: maxnowack/local-cache@v1
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Build Website
        run: yarn build-s
      - name: Stopping pm2
        run: /usr/local/bin/pm2 restart cretu
      - name: Copy Files
        run: /usr/bin/gcp -rv /root/actions-runner/work-cretu/cretu.dev/cretu.dev/. /root/work-clone/
      - name: Reload Server
        run: cd /root/work-clone && /usr/local/bin/pm2 restart cretu