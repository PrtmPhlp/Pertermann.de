# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Yarn Build

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: self-hosted
    #env:
    #  HOME: /root/

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: Get node version
        id: node
        run: |
            echo "::set-output name=version::$(node -v)"
  
      - name: Get node_modules cache
        uses: actions/cache@v3.0.2
        id: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
    
      - name: Install dependencies
        run: yarn install
      #- name: Run yarn Test
      #  run: yarn test
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Build Website
        run: yarn build-s
      #- name: Stopping pm2
      #  run: /usr/local/bin/pm2 stop cretu
      - name: Copy Files
        run: dbus-launch /usr/bin/gcp -rv /root/actions-runner/work-cretu/cretu.dev/cretu.dev/. /root/work-clone/
      - name: Reload Server
        run: cd /root/work-clone && /usr/local/bin/pm2 restart cretu

